<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mj.mapper.ScheduleJobMapper">
	<resultMap id="BaseResultMap"
		type="com.mj.entity.ScheduleJob">
		<id column="jobId" jdbcType="INTEGER" property="jobid" />
		<result column="jobName" jdbcType="VARCHAR" property="jobname" />
		<result column="jobGroup" jdbcType="VARCHAR"
			property="jobgroup" />
		<result column="jobStatus" jdbcType="INTEGER"
			property="jobstatus" />
		<result column="isConcurrent" jdbcType="VARCHAR"
			property="isconcurrent" />
		<result column="cronExpression" jdbcType="VARCHAR"
			property="cronexpression" />
		<result column="description" jdbcType="VARCHAR"
			property="description" />
		<result column="springId" jdbcType="VARCHAR"
			property="springid" />
		<result column="jobClass" jdbcType="VARCHAR"
			property="jobclass" />
		<result column="methodName" jdbcType="VARCHAR"
			property="methodname" />
		<result column="startTime" jdbcType="TIMESTAMP"
			property="starttime" />
		<result column="previousTime" jdbcType="TIMESTAMP"
			property="previoustime" />
		<result column="nextTime" jdbcType="TIMESTAMP"
			property="nexttime" />
	</resultMap>
	<sql id="Base_Column_List">
		jobId, jobName, jobGroup, jobStatus, isConcurrent, cronExpression,
		description, springId,
		jobClass, methodName, startTime, previousTime, nextTime
	</sql>

	<insert id="createQuartzJob"
		parameterType="com.mj.entity.ScheduleJob">
		insert into MJ_ScheduleJob
		<trim prefix="(" suffix=")" suffixOverrides=",">

			<if test="jobName != null">
				jobName,
			</if>
			<if test="jobGroup != null">
				jobGroup,
			</if>
			<if test="jobStatus != null">
				jobStatus,
			</if>
			<if test="isConcurrent != null">
				isConcurrent,
			</if>
			<if test="cronExpression != null">
				cronExpression,
			</if>
			<if test="description != null">
				description,
			</if>
			<if test="springId != null">
				springId,
			</if>
			<if test="jobClass != null">
				jobClass,
			</if>
			<if test="methodName != null">
				methodName,
			</if>
			<if test="startTime != null">
				startTime,
			</if>
			<if test="previousTime != null">
				previousTime,
			</if>
			<if test="nextTime != null">
				nextTime,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">

			<if test="jobName != null">
				#{jobName,jdbcType=VARCHAR},
			</if>
			<if test="jobGroup != null">
				#{jobGroup,jdbcType=VARCHAR},
			</if>
			<if test="jobStatus != null">
				#{jobStatus,jdbcType=INTEGER},
			</if>
			<if test="isConcurrent != null">
				#{isConcurrent,jdbcType=VARCHAR},
			</if>
			<if test="cronExpression != null">
				#{cronExpression,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				#{description,jdbcType=VARCHAR},
			</if>
			<if test="springId != null">
				#{springId,jdbcType=VARCHAR},
			</if>
			<if test="jobClass != null">
				#{jobClass,jdbcType=VARCHAR},
			</if>
			<if test="methodName != null">
				#{methodName,jdbcType=VARCHAR},
			</if>
			<if test="startTime != null">
				#{startTime,jdbcType=TIMESTAMP},
			</if>
			<if test="previousTime != null">
				#{previousTime,jdbcType=TIMESTAMP},
			</if>
			<if test="nextTime != null">
				#{nextTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="modifyQuartzJob" parameterType="com.mj.entity.ScheduleJob">
		update MJ_ScheduleJob set cronExpression = #{cronexpression,jdbcType=VARCHAR} where jobId = #{jobId,jdbcType=INTEGER}
	</update>
	<update id="pauseAllQuartzJob">
		update MJ_ScheduleJob set jobstatus = '0'
	</update>
	<update id="pauseQuartzJob" parameterType="com.mj.entity.ScheduleJob">
		update MJ_ScheduleJob set jobstatus = '0' where jobId = #{jobId,jdbcType=INTEGER}
	</update>
	<update id="resumeAllQuartzJob">
		update MJ_ScheduleJob set jobstatus = '1'
	</update>
	<update id="resumeQuartzJob" parameterType="com.mj.entity.ScheduleJob">
		update MJ_ScheduleJob set jobstatus = '1' where jobId = #{jobId,jdbcType=INTEGER}
	</update>
	<delete id="deleteQuartzJob" parameterType="com.mj.entity.ScheduleJob">
		delete from MJ_ScheduleJob where jobId = #{jobId,jdbcType=INTEGER}
	</delete>
	<select id="findQuartzJobById" parameterType="INTEGER">
		select * from MJ_ScheduleJob where jobId = #{jobId,jdbcType=INTEGER}
	</select>
	<select id="findQuartzJobByStatus" parameterType="STRING" resultType="com.mj.entity.ScheduleJob">
		select * from MJ_ScheduleJob where jobstatus = #{jobStatus}
	</select>
	<select id="findQuartzJobByKey"  resultType="com.mj.entity.ScheduleJob">
		select * from MJ_ScheduleJob where jobName = #{param1} and jobGroup = #{param2}
	</select>
	<update id="updateQuartzJobByKey" parameterType="com.mj.entity.ScheduleJob">
    update MJ_ScheduleJob
    <set>
      <if test="jobStatus != null">
        jobStatus = #{jobStatus,jdbcType=INTEGER},
      </if>
      <if test="isConcurrent != null">
        isConcurrent = #{isConcurrent,jdbcType=VARCHAR},
      </if>
      <if test="cronExpression != null">
        cronExpression = #{cronExpression,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="springId != null">
        springId = #{springId,jdbcType=VARCHAR},
      </if>
      <if test="jobClass != null">
        jobClass = #{jobClass,jdbcType=VARCHAR},
      </if>
      <if test="methodName != null">
        methodName = #{methodName,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        startTime = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="previousTime != null">
        previousTime = #{previousTime,jdbcType=TIMESTAMP},
      </if>
      <if test="nextTime != null">
        nextTime = #{nextTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where jobName = #{jobName,jdbcType=VARCHAR} and jobGroup = #{jobGroup,jdbcType=VARCHAR}
  </update>
</mapper>